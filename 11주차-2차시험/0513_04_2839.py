"""
    백준 2839 - 설탕 배달
"""
"""
    설탕을 N(입력)만큼 배달해야함
    봉지는 3, 5 짜리가 있고, 해당 봉지를 정확히 꽉 채워 써야함
    최소 봉지 개수를 구하면 됨
    
    dp[i] : i번 배달할 때의 최소 봉지 개수?
    
    한번의 (연산)횟수에 -3 혹은 -5를 적용 가능
    구한 값이 5의 배수 혹은 8의 배수면 되나?
    
    dp[n] = min(dp[n-5], dp[n-3]) + 1 (n >= 3, dp[3] = 1, if : n을 만들 수 없으면 dp[n] = -1)
    이게 맞는듯
"""

N = int(input())
dp = [0]*5001

dp[0] = -1
dp[1] = -1
dp[2] = -1
dp[3] = 1
dp[4] = -1 #min(dp[-1], dp[1]) 둘다 -1이니 -1
dp[5] = 1
#dp[6] = dp[3],dp[1]+1 둘중 dp[3]만 가능
#dp[7] = dp[2], dp[4] 둘 모두 -1이니 -1

if N > 5:
    for n in range(6, N+1):
        if dp[n-3] == -1 and dp[n-5] == -1:
            dp[n] = -1
        elif dp[n-3] == -1 and dp[n-5] != -1:
            dp[n] = dp[n-5] + 1
        elif dp[n-3] != -1 and dp[n-5] == -1:
            dp[n] = dp[n-3] + 1
        elif dp[n-3] != -1 and dp[n-5] != -1:
            dp[n] = min(dp[n-3], dp[n-5]) + 1

print(dp[N])