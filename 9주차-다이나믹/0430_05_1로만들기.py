"""
    1로 만들기
"""
"""
    다음 연산 4개를 활용해서 정수 X를 1로 만들자
    1. X가 5로 나누어 떨어지면, 5로 나눕니다.
    2. X가 3으로 나누어 떨어지면, 3으로 나눕니다.
    3. X가 2로 나누어 떨어지면, 2로 나눕니다.
    4. X에서 1을 뺍니다.
    연산을 사용하는 횟수의 최솟값을 출력하세요.
    
    26 -> 25 -> 5 -> 1 (3번)
    27 -> 9 -> 3 -> 1 (3번)
   
    점화식은 다음과 같다
    a[i] = i를 1로 만들기 위한 최소 연산 횟수
    a[i] = min( a[i-1], a[i/2], a[i/3], a[i/5] ) + 1
    
    a[26] = min( a[25], a[13], x, x ) + 1
"""

# 정수 X 입력 (최대 3만)
x = int(input())

# dp 테이블
d = [0] * 30001
d[1] = 0 # 1을 1로 만드는 횟수는 0번이다.

# 다이나믹 프로그래밍 바텀 업
for i in range(2, x+1):
    d[i] = d[i-1] + 1 # 1 더하기
    if i % 2 == 0:  # i가 2로 나눠 떨어지면
        d[i] = min(d[i], d[i//2] + 1)
    if i % 3 == 0:  # i가 3로 나눠 떨어지면
        d[i] = min(d[i], d[i//3] + 1)
    if i % 5 == 0:  # i가 5로 나눠 떨어지면
        d[i] = min(d[i], d[i//5] + 1)
print(d[x])